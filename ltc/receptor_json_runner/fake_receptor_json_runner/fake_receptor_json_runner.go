// This file was generated by counterfeiter
package fake_receptor_json_runner

import (
	"sync"

	"github.com/cloudfoundry-incubator/lattice/ltc/receptor_json_runner"
)

type FakeReceptorJsonRunner struct {
	CreateAppFromJsonStub        func(json string) error
	createAppFromJsonMutex       sync.RWMutex
	createAppFromJsonArgsForCall []struct {
		json string
	}
	createAppFromJsonReturns struct {
		result1 error
	}
}

func (fake *FakeReceptorJsonRunner) CreateAppFromJson(json string) error {
	fake.createAppFromJsonMutex.Lock()
	fake.createAppFromJsonArgsForCall = append(fake.createAppFromJsonArgsForCall, struct {
		json string
	}{json})
	fake.createAppFromJsonMutex.Unlock()
	if fake.CreateAppFromJsonStub != nil {
		return fake.CreateAppFromJsonStub(json)
	} else {
		return fake.createAppFromJsonReturns.result1
	}
}

func (fake *FakeReceptorJsonRunner) CreateAppFromJsonCallCount() int {
	fake.createAppFromJsonMutex.RLock()
	defer fake.createAppFromJsonMutex.RUnlock()
	return len(fake.createAppFromJsonArgsForCall)
}

func (fake *FakeReceptorJsonRunner) CreateAppFromJsonArgsForCall(i int) string {
	fake.createAppFromJsonMutex.RLock()
	defer fake.createAppFromJsonMutex.RUnlock()
	return fake.createAppFromJsonArgsForCall[i].json
}

func (fake *FakeReceptorJsonRunner) CreateAppFromJsonReturns(result1 error) {
	fake.CreateAppFromJsonStub = nil
	fake.createAppFromJsonReturns = struct {
		result1 error
	}{result1}
}

var _ receptor_json_runner.ReceptorJsonRunner = new(FakeReceptorJsonRunner)
